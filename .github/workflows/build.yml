name: CMake

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform_name: linux
            os: ubuntu-latest
            cxx: g++

          - platform_name: macos
            os: macos-latest
            cxx: clang++
            
          - platform_name: windows
            os: windows-latest
            cxx: msvc

    steps:
    - uses: actions/checkout@v3
    
    - name: "Setup python"
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: "Get conan"
      uses: turtlebrowser/get-conan@main
      with:
        version: 1.59.0
        
    - name: "Setup conan"
      run: conan profile new default --detect --force
        
    - name: "Configure conan"
      if: ${{ matrix.os == 'ubuntu-latest' }}
      run: conan profile update settings.compiler.libcxx=libstdc++11 default
        
    - name: "Install conan"
      run: conan install ${{github.workspace}} --install-folder ${{github.workspace}}/build --profile=default --build=missing
    
    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: ctest -C ${{env.BUILD_TYPE}} --output-on-failure
